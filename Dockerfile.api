FROM python:3.8-slim

# set working directory
WORKDIR /usr/src/app

# RUN python3 -m venv .env
# RUN source .env/bin/activate

COPY requirements.txt ./

RUN pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir gunicorn

COPY . .

# remove redundant static files
# todo:this really shouldnt be in the container context at all
RUN rm -rf /usr/src/app/static

# set user variables
ARG CONT_USER=gunicorn
ARG USER_UID=1000
ARG CONT_GRUP=contgrp
ARG CONT_GID=$USER_UID

# Create the group
RUN groupadd -g $CONT_GID -o $CONT_GRUP
# Create the user and add to group
RUN useradd --uid $USER_UID -m $CONT_USER && usermod -aG $CONT_GRUP $CONT_USER

# set permissions for required folders
# 755 for directories, 644 for files
# may need to add group like user:group
RUN chown -R $CONT_USER /usr/src/app && chmod -R 755 /usr/src/app

# activate the user
USER $CONT_USER

# if testing the api by itself
# EXPOSE 3000
# CMD ["gunicorn", "--bind=0.0.0.0:3000", "--workers=1", "wsgi:app"]

# for production and running the entire setup
CMD ["gunicorn", "--bind=unix:/run/gunicorn/gunicorn.sock", "--workers=1", "wsgi:app"]

# docker build -f Dockerfile.api -t rateapi:latest .
# docker run --rm -p 3000:3000 rateapi:latest